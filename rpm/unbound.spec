# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.32
# 

Name:       unbound

# >> macros
# << macros
%define soname_maj 8
%define soname_ver 8.1.21
%define sfos_user dns
%define sfos_confdir %{_sysconfdir}
%define sfos_statedir /home/.system/%{_localstatedir}/
%define spectacle_bug hack_fix
# Spectacular spectacle hack:
#   abuse Macros to work around the Macro-deleting bug in 0.32
%bcond_with python3
%bcond_with dnstap
%if %{with dnstap}
BuildRequires:  libfstrm-devel
BuildRequires:  libprotobuf-c-devel >= 1.0.0
BuildRequires:  protobuf-c >= 1.0.0
%endif
%if %{with python3}
BuildRequires:  python-rpm-macros
BuildRequires:  python3-devel
BuildRequires:  swig
%endif

Summary:    A validating, recursive, caching DNS resolver
Version:    1.17.1
Release:    0
Group:      Applications
License:    BSD-3-Clause
URL:        https://nlnetlabs.nl/projects/unbound/about/
Source0:    https://nlnetlabs.nl/downloads/unbound/%{name}-%{version}.tar.gz
Source1:    %{name}-anchor.service
Source2:    %{name}.service
Source3:    %{name}.socket
Source4:    01-require-home-mount-to-be-present.conf
Source5:    sailfishos.conf
Source6:    dnscrypt.conf
Source7:    dot-forward.conf
Source100:  unbound.yaml
Source101:  unbound-rpmlintrc
Requires(pre): systemd
Requires(preun): systemd
Requires(post): systemd
Requires(postun): systemd
BuildRequires:  pkgconfig(openssl)
BuildRequires:  pkgconfig(systemd)
BuildRequires:  pkgconfig(libsodium)
BuildRequires:  pkgconfig(libevent)

%description
%{summary}.

Unbound supports DNS-over-TLS and DNS-over-HTTPS which allows clients to
encrypt their communication. In addition, it supports various modern
standards that limit the amount of data exchanged with authoritative
servers. These standards do not only improve privacy but also help making
the DNS more robust. The most important are Query Name Minimisation, the
Aggressive Use of DNSSEC-Validated Cache and support for authority zones,
which can be used to load a copy of the root zone.

%if "%{?vendor}" == "chum"
PackageName: Unbound
PackagerName: nephros
DeveloperName: NLnet Labs
Categories:
  - Network
Custom:
  Repo: https://github.com/NLnetLabs/unbound
Icon: https://nlnetlabs.nl/static/logos/Unbound/Mark_Unbound_FC_Shaded.svg
Url:
  Homepage:   https://nlnetlabs.nl/projects/unbound/about/
  Help:       https://unbound.docs.nlnetlabs.nl/en/latest/
  Bugtracker: https://github.com/NLnetLabs/unbound/issues
%endif


%package devel
Summary:    Development files for %{name}
Group:      Development/Libraries
Requires:   libunbound%{soname_maj} = %{version}

%description devel
%{summary}.

%package -n libunbound%{soname_maj}
Summary:    libunbound library
Group:      Development/Libraries
Requires(post): /sbin/ldconfig
Requires(postun): /sbin/ldconfig

%description -n libunbound%{soname_maj}
%{summary}.

%if "%{?vendor}" == "chum"
PackageName: libunbound
DeveloperName: NLnet Labs
PackagerName: nephros
Categories:
  - Library
%endif


%prep
%setup -q -n %{name}-%{version}

# >> setup
# << setup

%build
# >> build pre
# << build pre

%configure --disable-static \
    CFLAGS="$RPM_OPT_FLAGS -fPIC -pie" \
    CXXFLAGS="$RPM_OPT_FLAGS -fPIC -pie" \
    --with-username=%{sfos_user} \
    --sysconfdir=%{sfos_confdir} \
    --sharedstatedir=%{sfos_statedir} \
    --localstatedir=%{sfos_statedir} \
    --with-pidfile=%{_rundir}/%{name}/%{name}.pid \
    --enable-pie \
    --enable-systemd \
    --enable-dnscrypt \
    --enable-ipsecmod \
    --disable-rpath \
    --enable-relro-now \
    --with-libevent \
    --with-pthreads \
    --disable-explicit-port-randomisation

make %{?_smp_mflags}

# >> build post
# << build post

%install
rm -rf %{buildroot}
# >> install pre
# << install pre
%make_install

# >> install post
# no docs
rm -rf %{buildroot}%{_mandir}
rm -rf %{buildroot}%{_docdir}
# service config
install -p -D -m644 %{SOURCE1} %{buildroot}/%{_unitdir}/%{name}-anchor.service
install -p -D -m644 %{SOURCE2} %{buildroot}/%{_unitdir}/%{name}.service
install -p -D -m644 %{SOURCE3} %{buildroot}/%{_unitdir}/%{name}.socket
install -p -D -m644 %{SOURCE4} %{buildroot}/%{_unitdir}/%{name}.service.d/01-require-home-mount-to-be-present.conf
# custom config
install -p -D -m644 %{SOURCE5} -t %{buildroot}%{sfos_confdir}/%{name}/
# example configs
for cfg in %{SOURCE6} %{SOURCE7}; do
install -p -D -m644 $cfg -t %{buildroot}%{sfos_confdir}/%{name}/%{name}.conf.d/
done
# << install post

%preun
# >> preun
%systemd_preun %{name}.service
%systemd_preun %{name}-anchor.service
%systemd_preun %{name}.socket
# << preun

%post
# >> post
%systemd_post %{name}.service
%systemd_post %{name}-anchor.service
%systemd_post %{name}.socket
# << post

%postun
# >> postun
%systemd_postun %{name}.service
%systemd_postun %{name}-anchor.service
%systemd_postun %{name}.socket
# << postun

%post -n libunbound%{soname_maj} -p /sbin/ldconfig

%postun -n libunbound%{soname_maj} -p /sbin/ldconfig

%files
%defattr(-,root,root,-)
%license LICENSE
%doc README.md SECURITY.md
%{_sbindir}/*
%config %{sfos_confdir}/%{name}/%{name}.conf
%config(noreplace) %{sfos_confdir}/%{name}/sailfishos.conf
%config(noreplace) %{sfos_confdir}/%{name}/%{name}.conf.d/*.conf
%{_unitdir}/*.service
%{_unitdir}/*.socket
%{_unitdir}/%{name}.service.d
# >> files
# << files

%files devel
%defattr(-,root,root,-)
%license LICENSE
%{_includedir}/*.h
%{_libdir}/*.so
%{_libdir}/pkgconfig/*.pc
# >> files devel
# << files devel

%files -n libunbound%{soname_maj}
%defattr(-,root,root,-)
%license LICENSE
%{_libdir}/lib%{name}.so.%{soname_maj}
%{_libdir}/lib%{name}.so.%{soname_ver}
# >> files libunbound%{soname_maj}
# this --------------^
# causes rpmlint errors. Ignore them.
# << files libunbound%{soname_maj}
